<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gjs.dao.FilesDao">

    <resultMap type="com.gjs.entity.Files" id="FilesMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="data" column="data" jdbcType="VARCHAR"/>
        <result property="workId" column="work_id" jdbcType="INTEGER"/>
        <result property="fileName" column="file_name" jdbcType="VARCHAR"/>
        <result property="size" column="size" jdbcType="INTEGER"/>
        <result property="uploadTime" column="upload_time" jdbcType="INTEGER"/>
        <result property="token" column="token" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="FilesMap">
        select id,
               data,
               work_id,
               file_name,
               size,
               upload_time,
               token
        from files
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="FilesMap">
        select
        id, data, work_id, file_name, size, upload_time, token
        from files
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="data != null and data != ''">
                and data = #{data}
            </if>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
            <if test="fileName != null and fileName != ''">
                and file_name = #{fileName}
            </if>
            <if test="size != null">
                and size = #{size}
            </if>
            <if test="uploadTime != null">
                and upload_time = #{uploadTime}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from files
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="data != null and data != ''">
                and data = #{data}
            </if>
            <if test="workId != null">
                and work_id = #{workId}
            </if>
            <if test="fileName != null and fileName != ''">
                and file_name = #{fileName}
            </if>
            <if test="size != null">
                and size = #{size}
            </if>
            <if test="uploadTime != null">
                and upload_time = #{uploadTime}
            </if>
            <if test="token != null and token != ''">
                and token = #{token}
            </if>
        </where>
    </select>
    <select id="queryByWorkId" resultMap="FilesMap">
        select *
        from files where work_id = #{work_id};
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into files(data, work_id, file_name, size, upload_time, token)
        values (#{data}, #{workId}, #{fileName}, #{size}, #{uploadTime}, #{token})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into files(data, work_id, file_name, size, upload_time, token)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.data}, #{entity.workId}, #{entity.fileName}, #{entity.size}, #{entity.uploadTime},
            #{entity.token})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into files(data, work_id, file_name, size, upload_time, token)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.data}, #{entity.workId}, #{entity.fileName}, #{entity.size}, #{entity.uploadTime},
            #{entity.token})
        </foreach>
        on duplicate key update
        data = values(data),
        work_id = values(work_id),
        file_name = values(file_name),
        size = values(size),
        upload_time = values(upload_time),
        token = values(token)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update files
        <set>
            <if test="data != null and data != ''">
                data = #{data},
            </if>
            <if test="workId != null">
                work_id = #{workId},
            </if>
            <if test="fileName != null and fileName != ''">
                file_name = #{fileName},
            </if>
            <if test="size != null">
                size = #{size},
            </if>
            <if test="uploadTime != null">
                upload_time = #{uploadTime},
            </if>
            <if test="token != null and token != ''">
                token = #{token},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from files
        where id = #{id}
    </delete>

</mapper>

